========================== bash cell | hello-compose ===========================

# Create a compose file that runs the standard hello-world image.
COMPOSE_FILE=tmp/compose.yml
cat > ${COMPOSE_FILE} << END_FILE
services:
  hello:
    image: hello-world
END_FILE

# Run the hello-world image using docker-compose.
sudo docker-compose --no-ansi --file ${COMPOSE_FILE} up

--------------------------------- cell outputs ---------------------------------
Attaching to tmp-hello-1
tmp-hello-1  | 
tmp-hello-1  | Hello from Docker!
tmp-hello-1  | This message shows that your installation appears to be working correctly.
tmp-hello-1  | 
tmp-hello-1  | To generate this message, Docker took the following steps:
tmp-hello-1  |  1. The Docker client contacted the Docker daemon.
tmp-hello-1  |  2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
tmp-hello-1  |     (amd64)
tmp-hello-1  |  3. The Docker daemon created a new container from that image which runs the
tmp-hello-1  |     executable that produces the output you are currently reading.
tmp-hello-1  |  4. The Docker daemon streamed that output to the Docker client, which sent it
tmp-hello-1  |     to your terminal.
tmp-hello-1  | 
tmp-hello-1  | To try something more ambitious, you can run an Ubuntu container with:
tmp-hello-1  |  $ docker run -it ubuntu bash
tmp-hello-1  | 
tmp-hello-1  | Share images, automate workflows, and more with a free Docker ID:
tmp-hello-1  |  https://hub.docker.com/
tmp-hello-1  | 
tmp-hello-1  | For more examples and ideas, visit:
tmp-hello-1  |  https://docs.docker.com/get-started/
tmp-hello-1  | 
tmp-hello-1 exited with code 0
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


